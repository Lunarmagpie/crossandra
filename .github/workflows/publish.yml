# Modified from https://github.com/mypyc/mypy_mypyc-wheels/blob/master/.github/workflows/build.yml

name: Build wheels

on: [push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: py${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # cibuildwheel builds linux wheels inside a manylinux container
        # it also takes care of procuring the correct python version for us
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [39, 310, 311]

    steps:
      - uses: actions/checkout@v3
      - uses: pypa/cibuildwheel@v2.11.1
        env:
          CIBW_BUILD: "cp${{ matrix.python-version}}-*"

      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ./wheelhouse/*.whl

  build_sdist_python_wheel:
    name: sdist and python wheel
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.7"
      - name: Build sdist and wheel
        run: |
          cd mypy
          pip install --upgrade setuptools build
          python -m build
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: |
            mypy/dist/*.whl
            mypy/dist/*.tar.gz

  # build_wasm_wheel:
  #   name: WASM wheel for 3.10
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-python@v4
  #       name: Install Python
  #       with:
  #         python-version: "3.10"
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 18.5.0 # pyodide tests with this version
  #     - name: Install emscripten
  #       id: install_emsdk
  #       run: |
  #         git clone https://github.com/emscripten-core/emsdk.git
  #         cd emsdk
  #         # Version of Emscripten pyodide 0.21.0 uses.
  #         ./emsdk install 3.1.14
  #         ./emsdk activate 3.1.14
  #         # We need the location of emscripten when we use pyodide-build
  #         echo "EMSCRIPTEN_DIR=$(pwd)" >> $GITHUB_OUTPUT
  #     - name: Checkout mypy
  #       shell: bash
  #       run: |
  #         COMMIT=$(cat mypy_commit)
  #         git clone https://github.com/python/mypy.git
  #         cd mypy
  #         git checkout $COMMIT
  #         git submodule update --init --recursive
  #     - name: Install pyodide-build
  #       run: |
  #         python -m pip install "pyodide-build==0.21.0"
  #     - name: Build wasm wheels
  #       env:
  #         MYPY_USE_MYPYC: "1"
  #         MYPYC_OPT_LEVEL: "3"
  #         EMSCRIPTEN_DIR: ${{ steps.install_emsdk.outputs.EMSCRIPTEN_DIR }}
  #       run: |
  #         cd mypy
  #         source $EMSCRIPTEN_DIR/emsdk_env.sh
  #         pyodide build --exports pyinit
  #     - name: Install pyodide for WASM test
  #       run: |
  #         npm install pyodide@0.21.3
  #     - name: Run WASM smoke test
  #       run: |
  #         node wasm_test.js
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: dist
  #         path: |
  #           mypy/dist/*.whl

  release:
    name: create release
    needs: [build_wheels, build_sdist_python_wheel]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: publish
        run: |
          pip install twine
          twine upload dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}
